// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: feedback_help/v1/feedback_help.proto

package feedback_helpv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{0}
}

type GetQuestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*FrequentlyAskedQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuestionsResponse) Reset() {
	*x = GetQuestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsResponse) ProtoMessage() {}

func (x *GetQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{1}
}

func (x *GetQuestionsResponse) GetQuestions() []*FrequentlyAskedQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type FindQuestionByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *FindQuestionByNameRequest) Reset() {
	*x = FindQuestionByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindQuestionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByNameRequest) ProtoMessage() {}

func (x *FindQuestionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByNameRequest.ProtoReflect.Descriptor instead.
func (*FindQuestionByNameRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{2}
}

func (x *FindQuestionByNameRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type FindQuestionByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*FrequentlyAskedQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *FindQuestionByNameResponse) Reset() {
	*x = FindQuestionByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindQuestionByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByNameResponse) ProtoMessage() {}

func (x *FindQuestionByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByNameResponse.ProtoReflect.Descriptor instead.
func (*FindQuestionByNameResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{3}
}

func (x *FindQuestionByNameResponse) GetQuestions() []*FrequentlyAskedQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Anwser   string `protobuf:"bytes,2,opt,name=anwser,proto3" json:"anwser,omitempty"`
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{4}
}

func (x *CreateQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreateQuestionRequest) GetAnwser() string {
	if x != nil {
		return x.Anwser
	}
	return ""
}

type UpdateQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Question   string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Anwser     string `protobuf:"bytes,3,opt,name=anwser,proto3" json:"anwser,omitempty"`
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *UpdateQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *UpdateQuestionRequest) GetAnwser() string {
	if x != nil {
		return x.Anwser
	}
	return ""
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type NoteQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	IfOver     bool  `protobuf:"varint,2,opt,name=if_over,json=ifOver,proto3" json:"if_over,omitempty"`
}

func (x *NoteQuestionRequest) Reset() {
	*x = NoteQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteQuestionRequest) ProtoMessage() {}

func (x *NoteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteQuestionRequest.ProtoReflect.Descriptor instead.
func (*NoteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{7}
}

func (x *NoteQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *NoteQuestionRequest) GetIfOver() bool {
	if x != nil {
		return x.IfOver
	}
	return false
}

type NoteEventTrackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event int32 `protobuf:"varint,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *NoteEventTrackingRequest) Reset() {
	*x = NoteEventTrackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteEventTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteEventTrackingRequest) ProtoMessage() {}

func (x *NoteEventTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteEventTrackingRequest.ProtoReflect.Descriptor instead.
func (*NoteEventTrackingRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{8}
}

func (x *NoteEventTrackingRequest) GetEvent() int32 {
	if x != nil {
		return x.Event
	}
	return 0
}

type NoteMoreFeedbackSearchSkipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int64 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
}

func (x *NoteMoreFeedbackSearchSkipRequest) Reset() {
	*x = NoteMoreFeedbackSearchSkipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoteMoreFeedbackSearchSkipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteMoreFeedbackSearchSkipRequest) ProtoMessage() {}

func (x *NoteMoreFeedbackSearchSkipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteMoreFeedbackSearchSkipRequest.ProtoReflect.Descriptor instead.
func (*NoteMoreFeedbackSearchSkipRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{9}
}

func (x *NoteMoreFeedbackSearchSkipRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type OperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *OperationResponse) Reset() {
	*x = OperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponse) ProtoMessage() {}

func (x *OperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponse.ProtoReflect.Descriptor instead.
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{10}
}

func (x *OperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FrequentlyAskedQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Question   string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer     string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	ClickTimes int64                  `protobuf:"varint,4,opt,name=click_times,json=clickTimes,proto3" json:"click_times,omitempty"`
	Ctime      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"` // 使用 Timestamp 类型来表示时间
	Utime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=utime,proto3" json:"utime,omitempty"`
}

func (x *FrequentlyAskedQuestion) Reset() {
	*x = FrequentlyAskedQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrequentlyAskedQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequentlyAskedQuestion) ProtoMessage() {}

func (x *FrequentlyAskedQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequentlyAskedQuestion.ProtoReflect.Descriptor instead.
func (*FrequentlyAskedQuestion) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{11}
}

func (x *FrequentlyAskedQuestion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrequentlyAskedQuestion) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FrequentlyAskedQuestion) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *FrequentlyAskedQuestion) GetClickTimes() int64 {
	if x != nil {
		return x.ClickTimes
	}
	return 0
}

func (x *FrequentlyAskedQuestion) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *FrequentlyAskedQuestion) GetUtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Utime
	}
	return nil
}

var File_feedback_help_v1_feedback_help_proto protoreflect.FileDescriptor

var file_feedback_help_v1_feedback_help_proto_rawDesc = []byte{
	0x0a, 0x24, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x73, 0x6b, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x37, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x1a, 0x46,
	0x69, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x73,
	0x6b, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6e, 0x77, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x77,
	0x73, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x77,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x77, 0x73, 0x65,
	0x72, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x4e,
	0x6f, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x66, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x66, 0x4f, 0x76, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x18,
	0x4e, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x44,
	0x0a, 0x21, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe2, 0x01,
	0x0a, 0x17, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x73, 0x6b, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x75, 0x74, 0x69,
	0x6d, 0x65, 0x32, 0xf1, 0x06, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48,
	0x65, 0x6c, 0x70, 0x12, 0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1a, 0x4e, 0x6f, 0x74, 0x65, 0x4d, 0x6f,
	0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x6b, 0x69, 0x70, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x4d, 0x6f, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x63, 0x6e, 0x75, 0x2f, 0x63, 0x63,
	0x6e, 0x75, 0x62, 0x6f, 0x78, 0x2d, 0x62, 0x65, 0x2f, 0x62, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_feedback_help_v1_feedback_help_proto_rawDescOnce sync.Once
	file_feedback_help_v1_feedback_help_proto_rawDescData = file_feedback_help_v1_feedback_help_proto_rawDesc
)

func file_feedback_help_v1_feedback_help_proto_rawDescGZIP() []byte {
	file_feedback_help_v1_feedback_help_proto_rawDescOnce.Do(func() {
		file_feedback_help_v1_feedback_help_proto_rawDescData = protoimpl.X.CompressGZIP(file_feedback_help_v1_feedback_help_proto_rawDescData)
	})
	return file_feedback_help_v1_feedback_help_proto_rawDescData
}

var file_feedback_help_v1_feedback_help_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_feedback_help_v1_feedback_help_proto_goTypes = []interface{}{
	(*EmptyRequest)(nil),                      // 0: api.feedback_help.v1.EmptyRequest
	(*GetQuestionsResponse)(nil),              // 1: api.feedback_help.v1.GetQuestionsResponse
	(*FindQuestionByNameRequest)(nil),         // 2: api.feedback_help.v1.FindQuestionByNameRequest
	(*FindQuestionByNameResponse)(nil),        // 3: api.feedback_help.v1.FindQuestionByNameResponse
	(*CreateQuestionRequest)(nil),             // 4: api.feedback_help.v1.CreateQuestionRequest
	(*UpdateQuestionRequest)(nil),             // 5: api.feedback_help.v1.UpdateQuestionRequest
	(*DeleteQuestionRequest)(nil),             // 6: api.feedback_help.v1.DeleteQuestionRequest
	(*NoteQuestionRequest)(nil),               // 7: api.feedback_help.v1.NoteQuestionRequest
	(*NoteEventTrackingRequest)(nil),          // 8: api.feedback_help.v1.NoteEventTrackingRequest
	(*NoteMoreFeedbackSearchSkipRequest)(nil), // 9: api.feedback_help.v1.NoteMoreFeedbackSearchSkipRequest
	(*OperationResponse)(nil),                 // 10: api.feedback_help.v1.OperationResponse
	(*FrequentlyAskedQuestion)(nil),           // 11: api.feedback_help.v1.FrequentlyAskedQuestion
	(*timestamppb.Timestamp)(nil),             // 12: google.protobuf.Timestamp
}
var file_feedback_help_v1_feedback_help_proto_depIdxs = []int32{
	11, // 0: api.feedback_help.v1.GetQuestionsResponse.questions:type_name -> api.feedback_help.v1.FrequentlyAskedQuestion
	11, // 1: api.feedback_help.v1.FindQuestionByNameResponse.questions:type_name -> api.feedback_help.v1.FrequentlyAskedQuestion
	12, // 2: api.feedback_help.v1.FrequentlyAskedQuestion.ctime:type_name -> google.protobuf.Timestamp
	12, // 3: api.feedback_help.v1.FrequentlyAskedQuestion.utime:type_name -> google.protobuf.Timestamp
	0,  // 4: api.feedback_help.v1.FeedbackHelp.GetQuestions:input_type -> api.feedback_help.v1.EmptyRequest
	2,  // 5: api.feedback_help.v1.FeedbackHelp.FindQuestionByName:input_type -> api.feedback_help.v1.FindQuestionByNameRequest
	4,  // 6: api.feedback_help.v1.FeedbackHelp.CreateQuestion:input_type -> api.feedback_help.v1.CreateQuestionRequest
	5,  // 7: api.feedback_help.v1.FeedbackHelp.ChangeQuestion:input_type -> api.feedback_help.v1.UpdateQuestionRequest
	6,  // 8: api.feedback_help.v1.FeedbackHelp.DeleteQuestion:input_type -> api.feedback_help.v1.DeleteQuestionRequest
	7,  // 9: api.feedback_help.v1.FeedbackHelp.NoteQuestion:input_type -> api.feedback_help.v1.NoteQuestionRequest
	8,  // 10: api.feedback_help.v1.FeedbackHelp.NoteEventTracking:input_type -> api.feedback_help.v1.NoteEventTrackingRequest
	9,  // 11: api.feedback_help.v1.FeedbackHelp.NoteMoreFeedbackSearchSkip:input_type -> api.feedback_help.v1.NoteMoreFeedbackSearchSkipRequest
	1,  // 12: api.feedback_help.v1.FeedbackHelp.GetQuestions:output_type -> api.feedback_help.v1.GetQuestionsResponse
	3,  // 13: api.feedback_help.v1.FeedbackHelp.FindQuestionByName:output_type -> api.feedback_help.v1.FindQuestionByNameResponse
	10, // 14: api.feedback_help.v1.FeedbackHelp.CreateQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 15: api.feedback_help.v1.FeedbackHelp.ChangeQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 16: api.feedback_help.v1.FeedbackHelp.DeleteQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 17: api.feedback_help.v1.FeedbackHelp.NoteQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 18: api.feedback_help.v1.FeedbackHelp.NoteEventTracking:output_type -> api.feedback_help.v1.OperationResponse
	10, // 19: api.feedback_help.v1.FeedbackHelp.NoteMoreFeedbackSearchSkip:output_type -> api.feedback_help.v1.OperationResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_feedback_help_v1_feedback_help_proto_init() }
func file_feedback_help_v1_feedback_help_proto_init() {
	if File_feedback_help_v1_feedback_help_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feedback_help_v1_feedback_help_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindQuestionByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindQuestionByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteEventTrackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoteMoreFeedbackSearchSkipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedback_help_v1_feedback_help_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrequentlyAskedQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feedback_help_v1_feedback_help_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feedback_help_v1_feedback_help_proto_goTypes,
		DependencyIndexes: file_feedback_help_v1_feedback_help_proto_depIdxs,
		MessageInfos:      file_feedback_help_v1_feedback_help_proto_msgTypes,
	}.Build()
	File_feedback_help_v1_feedback_help_proto = out.File
	file_feedback_help_v1_feedback_help_proto_rawDesc = nil
	file_feedback_help_v1_feedback_help_proto_goTypes = nil
	file_feedback_help_v1_feedback_help_proto_depIdxs = nil
}
