// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package departmentv1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsGetDepartmentError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == DepartmentErrorReason_GET_DEPARTMENT_ERROR.String() && e.Code == 501
}

func ErrorGetDepartmentError(format string, args ...interface{}) *errors.Error {
	return errors.New(501, DepartmentErrorReason_GET_DEPARTMENT_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsDelDepartmentError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == DepartmentErrorReason_DEL_DEPARTMENT_ERROR.String() && e.Code == 502
}

func ErrorDelDepartmentError(format string, args ...interface{}) *errors.Error {
	return errors.New(502, DepartmentErrorReason_DEL_DEPARTMENT_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsSaveDepartmentError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == DepartmentErrorReason_SAVE_DEPARTMENT_ERROR.String() && e.Code == 503
}

func ErrorSaveDepartmentError(format string, args ...interface{}) *errors.Error {
	return errors.New(503, DepartmentErrorReason_SAVE_DEPARTMENT_ERROR.String(), fmt.Sprintf(format, args...))
}
