// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package elecpricev1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsInternetError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_INTERNET_ERROR.String() && e.Code == 501
}

func ErrorInternetError(format string, args ...interface{}) *errors.Error {
	return errors.New(501, ErrorReason_INTERNET_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsFindConfigError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_FIND_CONFIG_ERROR.String() && e.Code == 502
}

func ErrorFindConfigError(format string, args ...interface{}) *errors.Error {
	return errors.New(502, ErrorReason_FIND_CONFIG_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsSaveConfigError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_SAVE_CONFIG_ERROR.String() && e.Code == 503
}

func ErrorSaveConfigError(format string, args ...interface{}) *errors.Error {
	return errors.New(503, ErrorReason_SAVE_CONFIG_ERROR.String(), fmt.Sprintf(format, args...))
}
