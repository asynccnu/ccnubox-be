// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: feedback_help/v1/feedback_help.proto

package feedback_helpv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{0}
}

type GetQuestionsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Questions     []*FrequentlyAskedQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionsResponse) Reset() {
	*x = GetQuestionsResponse{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsResponse) ProtoMessage() {}

func (x *GetQuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionsResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{1}
}

func (x *GetQuestionsResponse) GetQuestions() []*FrequentlyAskedQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type FindQuestionByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindQuestionByNameRequest) Reset() {
	*x = FindQuestionByNameRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindQuestionByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByNameRequest) ProtoMessage() {}

func (x *FindQuestionByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByNameRequest.ProtoReflect.Descriptor instead.
func (*FindQuestionByNameRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{2}
}

func (x *FindQuestionByNameRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type FindQuestionByNameResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Questions     []*FrequentlyAskedQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindQuestionByNameResponse) Reset() {
	*x = FindQuestionByNameResponse{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindQuestionByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindQuestionByNameResponse) ProtoMessage() {}

func (x *FindQuestionByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindQuestionByNameResponse.ProtoReflect.Descriptor instead.
func (*FindQuestionByNameResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{3}
}

func (x *FindQuestionByNameResponse) GetQuestions() []*FrequentlyAskedQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Anwser        string                 `protobuf:"bytes,2,opt,name=anwser,proto3" json:"anwser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{4}
}

func (x *CreateQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreateQuestionRequest) GetAnwser() string {
	if x != nil {
		return x.Anwser
	}
	return ""
}

type UpdateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Anwser        string                 `protobuf:"bytes,3,opt,name=anwser,proto3" json:"anwser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *UpdateQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *UpdateQuestionRequest) GetAnwser() string {
	if x != nil {
		return x.Anwser
	}
	return ""
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type NoteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	IfOver        bool                   `protobuf:"varint,2,opt,name=if_over,json=ifOver,proto3" json:"if_over,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteQuestionRequest) Reset() {
	*x = NoteQuestionRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteQuestionRequest) ProtoMessage() {}

func (x *NoteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteQuestionRequest.ProtoReflect.Descriptor instead.
func (*NoteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{7}
}

func (x *NoteQuestionRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *NoteQuestionRequest) GetIfOver() bool {
	if x != nil {
		return x.IfOver
	}
	return false
}

type NoteEventTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         int32                  `protobuf:"varint,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteEventTrackingRequest) Reset() {
	*x = NoteEventTrackingRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteEventTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteEventTrackingRequest) ProtoMessage() {}

func (x *NoteEventTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteEventTrackingRequest.ProtoReflect.Descriptor instead.
func (*NoteEventTrackingRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{8}
}

func (x *NoteEventTrackingRequest) GetEvent() int32 {
	if x != nil {
		return x.Event
	}
	return 0
}

type NoteMoreFeedbackSearchSkipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoteMoreFeedbackSearchSkipRequest) Reset() {
	*x = NoteMoreFeedbackSearchSkipRequest{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteMoreFeedbackSearchSkipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteMoreFeedbackSearchSkipRequest) ProtoMessage() {}

func (x *NoteMoreFeedbackSearchSkipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteMoreFeedbackSearchSkipRequest.ProtoReflect.Descriptor instead.
func (*NoteMoreFeedbackSearchSkipRequest) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{9}
}

func (x *NoteMoreFeedbackSearchSkipRequest) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

type OperationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationResponse) Reset() {
	*x = OperationResponse{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponse) ProtoMessage() {}

func (x *OperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponse.ProtoReflect.Descriptor instead.
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{10}
}

func (x *OperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FrequentlyAskedQuestion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer        string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	ClickTimes    int64                  `protobuf:"varint,4,opt,name=click_times,json=clickTimes,proto3" json:"click_times,omitempty"`
	Ctime         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"` // 使用 Timestamp 类型来表示时间
	Utime         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=utime,proto3" json:"utime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequentlyAskedQuestion) Reset() {
	*x = FrequentlyAskedQuestion{}
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequentlyAskedQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequentlyAskedQuestion) ProtoMessage() {}

func (x *FrequentlyAskedQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_feedback_help_v1_feedback_help_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequentlyAskedQuestion.ProtoReflect.Descriptor instead.
func (*FrequentlyAskedQuestion) Descriptor() ([]byte, []int) {
	return file_feedback_help_v1_feedback_help_proto_rawDescGZIP(), []int{11}
}

func (x *FrequentlyAskedQuestion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrequentlyAskedQuestion) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FrequentlyAskedQuestion) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *FrequentlyAskedQuestion) GetClickTimes() int64 {
	if x != nil {
		return x.ClickTimes
	}
	return 0
}

func (x *FrequentlyAskedQuestion) GetCtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *FrequentlyAskedQuestion) GetUtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Utime
	}
	return nil
}

var File_feedback_help_v1_feedback_help_proto protoreflect.FileDescriptor

const file_feedback_help_v1_feedback_help_proto_rawDesc = "" +
	"\n" +
	"$feedback_help/v1/feedback_help.proto\x12\x14api.feedback_help.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0e\n" +
	"\fEmptyRequest\"c\n" +
	"\x14GetQuestionsResponse\x12K\n" +
	"\tquestions\x18\x01 \x03(\v2-.api.feedback_help.v1.FrequentlyAskedQuestionR\tquestions\"7\n" +
	"\x19FindQuestionByNameRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\"i\n" +
	"\x1aFindQuestionByNameResponse\x12K\n" +
	"\tquestions\x18\x01 \x03(\v2-.api.feedback_help.v1.FrequentlyAskedQuestionR\tquestions\"K\n" +
	"\x15CreateQuestionRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x16\n" +
	"\x06anwser\x18\x02 \x01(\tR\x06anwser\"l\n" +
	"\x15UpdateQuestionRequest\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\x12\x16\n" +
	"\x06anwser\x18\x03 \x01(\tR\x06anwser\"8\n" +
	"\x15DeleteQuestionRequest\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\"O\n" +
	"\x13NoteQuestionRequest\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\x12\x17\n" +
	"\aif_over\x18\x02 \x01(\bR\x06ifOver\"0\n" +
	"\x18NoteEventTrackingRequest\x12\x14\n" +
	"\x05event\x18\x01 \x01(\x05R\x05event\"D\n" +
	"!NoteMoreFeedbackSearchSkipRequest\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\"G\n" +
	"\x11OperationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xe2\x01\n" +
	"\x17FrequentlyAskedQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\x12\x16\n" +
	"\x06answer\x18\x03 \x01(\tR\x06answer\x12\x1f\n" +
	"\vclick_times\x18\x04 \x01(\x03R\n" +
	"clickTimes\x120\n" +
	"\x05ctime\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05ctime\x120\n" +
	"\x05utime\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x05utime2\xf1\x06\n" +
	"\fFeedbackHelp\x12^\n" +
	"\fGetQuestions\x12\".api.feedback_help.v1.EmptyRequest\x1a*.api.feedback_help.v1.GetQuestionsResponse\x12w\n" +
	"\x12FindQuestionByName\x12/.api.feedback_help.v1.FindQuestionByNameRequest\x1a0.api.feedback_help.v1.FindQuestionByNameResponse\x12f\n" +
	"\x0eCreateQuestion\x12+.api.feedback_help.v1.CreateQuestionRequest\x1a'.api.feedback_help.v1.OperationResponse\x12f\n" +
	"\x0eChangeQuestion\x12+.api.feedback_help.v1.UpdateQuestionRequest\x1a'.api.feedback_help.v1.OperationResponse\x12f\n" +
	"\x0eDeleteQuestion\x12+.api.feedback_help.v1.DeleteQuestionRequest\x1a'.api.feedback_help.v1.OperationResponse\x12b\n" +
	"\fNoteQuestion\x12).api.feedback_help.v1.NoteQuestionRequest\x1a'.api.feedback_help.v1.OperationResponse\x12l\n" +
	"\x11NoteEventTracking\x12..api.feedback_help.v1.NoteEventTrackingRequest\x1a'.api.feedback_help.v1.OperationResponse\x12~\n" +
	"\x1aNoteMoreFeedbackSearchSkip\x127.api.feedback_help.v1.NoteMoreFeedbackSearchSkipRequest\x1a'.api.feedback_help.v1.OperationResponseBRZPgithub.com/asynccnu/ccnubox-be/be-api/gen/proto/feedback_help/v1;feedback_helpv1b\x06proto3"

var (
	file_feedback_help_v1_feedback_help_proto_rawDescOnce sync.Once
	file_feedback_help_v1_feedback_help_proto_rawDescData []byte
)

func file_feedback_help_v1_feedback_help_proto_rawDescGZIP() []byte {
	file_feedback_help_v1_feedback_help_proto_rawDescOnce.Do(func() {
		file_feedback_help_v1_feedback_help_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_feedback_help_v1_feedback_help_proto_rawDesc), len(file_feedback_help_v1_feedback_help_proto_rawDesc)))
	})
	return file_feedback_help_v1_feedback_help_proto_rawDescData
}

var file_feedback_help_v1_feedback_help_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_feedback_help_v1_feedback_help_proto_goTypes = []any{
	(*EmptyRequest)(nil),                      // 0: api.feedback_help.v1.EmptyRequest
	(*GetQuestionsResponse)(nil),              // 1: api.feedback_help.v1.GetQuestionsResponse
	(*FindQuestionByNameRequest)(nil),         // 2: api.feedback_help.v1.FindQuestionByNameRequest
	(*FindQuestionByNameResponse)(nil),        // 3: api.feedback_help.v1.FindQuestionByNameResponse
	(*CreateQuestionRequest)(nil),             // 4: api.feedback_help.v1.CreateQuestionRequest
	(*UpdateQuestionRequest)(nil),             // 5: api.feedback_help.v1.UpdateQuestionRequest
	(*DeleteQuestionRequest)(nil),             // 6: api.feedback_help.v1.DeleteQuestionRequest
	(*NoteQuestionRequest)(nil),               // 7: api.feedback_help.v1.NoteQuestionRequest
	(*NoteEventTrackingRequest)(nil),          // 8: api.feedback_help.v1.NoteEventTrackingRequest
	(*NoteMoreFeedbackSearchSkipRequest)(nil), // 9: api.feedback_help.v1.NoteMoreFeedbackSearchSkipRequest
	(*OperationResponse)(nil),                 // 10: api.feedback_help.v1.OperationResponse
	(*FrequentlyAskedQuestion)(nil),           // 11: api.feedback_help.v1.FrequentlyAskedQuestion
	(*timestamppb.Timestamp)(nil),             // 12: google.protobuf.Timestamp
}
var file_feedback_help_v1_feedback_help_proto_depIdxs = []int32{
	11, // 0: api.feedback_help.v1.GetQuestionsResponse.questions:type_name -> api.feedback_help.v1.FrequentlyAskedQuestion
	11, // 1: api.feedback_help.v1.FindQuestionByNameResponse.questions:type_name -> api.feedback_help.v1.FrequentlyAskedQuestion
	12, // 2: api.feedback_help.v1.FrequentlyAskedQuestion.ctime:type_name -> google.protobuf.Timestamp
	12, // 3: api.feedback_help.v1.FrequentlyAskedQuestion.utime:type_name -> google.protobuf.Timestamp
	0,  // 4: api.feedback_help.v1.FeedbackHelp.GetQuestions:input_type -> api.feedback_help.v1.EmptyRequest
	2,  // 5: api.feedback_help.v1.FeedbackHelp.FindQuestionByName:input_type -> api.feedback_help.v1.FindQuestionByNameRequest
	4,  // 6: api.feedback_help.v1.FeedbackHelp.CreateQuestion:input_type -> api.feedback_help.v1.CreateQuestionRequest
	5,  // 7: api.feedback_help.v1.FeedbackHelp.ChangeQuestion:input_type -> api.feedback_help.v1.UpdateQuestionRequest
	6,  // 8: api.feedback_help.v1.FeedbackHelp.DeleteQuestion:input_type -> api.feedback_help.v1.DeleteQuestionRequest
	7,  // 9: api.feedback_help.v1.FeedbackHelp.NoteQuestion:input_type -> api.feedback_help.v1.NoteQuestionRequest
	8,  // 10: api.feedback_help.v1.FeedbackHelp.NoteEventTracking:input_type -> api.feedback_help.v1.NoteEventTrackingRequest
	9,  // 11: api.feedback_help.v1.FeedbackHelp.NoteMoreFeedbackSearchSkip:input_type -> api.feedback_help.v1.NoteMoreFeedbackSearchSkipRequest
	1,  // 12: api.feedback_help.v1.FeedbackHelp.GetQuestions:output_type -> api.feedback_help.v1.GetQuestionsResponse
	3,  // 13: api.feedback_help.v1.FeedbackHelp.FindQuestionByName:output_type -> api.feedback_help.v1.FindQuestionByNameResponse
	10, // 14: api.feedback_help.v1.FeedbackHelp.CreateQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 15: api.feedback_help.v1.FeedbackHelp.ChangeQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 16: api.feedback_help.v1.FeedbackHelp.DeleteQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 17: api.feedback_help.v1.FeedbackHelp.NoteQuestion:output_type -> api.feedback_help.v1.OperationResponse
	10, // 18: api.feedback_help.v1.FeedbackHelp.NoteEventTracking:output_type -> api.feedback_help.v1.OperationResponse
	10, // 19: api.feedback_help.v1.FeedbackHelp.NoteMoreFeedbackSearchSkip:output_type -> api.feedback_help.v1.OperationResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_feedback_help_v1_feedback_help_proto_init() }
func file_feedback_help_v1_feedback_help_proto_init() {
	if File_feedback_help_v1_feedback_help_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_feedback_help_v1_feedback_help_proto_rawDesc), len(file_feedback_help_v1_feedback_help_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feedback_help_v1_feedback_help_proto_goTypes,
		DependencyIndexes: file_feedback_help_v1_feedback_help_proto_depIdxs,
		MessageInfos:      file_feedback_help_v1_feedback_help_proto_msgTypes,
	}.Build()
	File_feedback_help_v1_feedback_help_proto = out.File
	file_feedback_help_v1_feedback_help_proto_goTypes = nil
	file_feedback_help_v1_feedback_help_proto_depIdxs = nil
}
