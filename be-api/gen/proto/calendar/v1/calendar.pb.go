// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.1
// source: calendar/v1/calendar.proto

package calendarv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Year int64  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *CalendarRequest) Reset() {
	*x = CalendarRequest{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarRequest) ProtoMessage() {}

func (x *CalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarRequest.ProtoReflect.Descriptor instead.
func (*CalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *CalendarRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CalendarRequest) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type CalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Year int64  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *CalendarResponse) Reset() {
	*x = CalendarResponse{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarResponse) ProtoMessage() {}

func (x *CalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarResponse.ProtoReflect.Descriptor instead.
func (*CalendarResponse) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{1}
}

func (x *CalendarResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CalendarResponse) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year int64 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetCalendarRequest) Reset() {
	*x = GetCalendarRequest{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarRequest) ProtoMessage() {}

func (x *GetCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarRequest.ProtoReflect.Descriptor instead.
func (*GetCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{2}
}

func (x *GetCalendarRequest) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Year int64  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetCalendarResponse) Reset() {
	*x = GetCalendarResponse{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarResponse) ProtoMessage() {}

func (x *GetCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarResponse.ProtoReflect.Descriptor instead.
func (*GetCalendarResponse) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{3}
}

func (x *GetCalendarResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GetCalendarResponse) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type SaveCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calendar *CalendarRequest `protobuf:"bytes,1,opt,name=calendar,proto3" json:"calendar,omitempty"`
}

func (x *SaveCalendarRequest) Reset() {
	*x = SaveCalendarRequest{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCalendarRequest) ProtoMessage() {}

func (x *SaveCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCalendarRequest.ProtoReflect.Descriptor instead.
func (*SaveCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{4}
}

func (x *SaveCalendarRequest) GetCalendar() *CalendarRequest {
	if x != nil {
		return x.Calendar
	}
	return nil
}

type SaveCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveCalendarResponse) Reset() {
	*x = SaveCalendarResponse{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCalendarResponse) ProtoMessage() {}

func (x *SaveCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCalendarResponse.ProtoReflect.Descriptor instead.
func (*SaveCalendarResponse) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{5}
}

type DelCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year int64 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *DelCalendarRequest) Reset() {
	*x = DelCalendarRequest{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCalendarRequest) ProtoMessage() {}

func (x *DelCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCalendarRequest.ProtoReflect.Descriptor instead.
func (*DelCalendarRequest) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{6}
}

func (x *DelCalendarRequest) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type DelCalendarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCalendarResponse) Reset() {
	*x = DelCalendarResponse{}
	mi := &file_calendar_v1_calendar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCalendarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCalendarResponse) ProtoMessage() {}

func (x *DelCalendarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_v1_calendar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCalendarResponse.ProtoReflect.Descriptor instead.
func (*DelCalendarResponse) Descriptor() ([]byte, []int) {
	return file_calendar_v1_calendar_proto_rawDescGZIP(), []int{7}
}

var File_calendar_v1_calendar_proto protoreflect.FileDescriptor

var file_calendar_v1_calendar_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x22, 0x3a, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x15, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x8a, 0x02, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x20, 0x2e, 0x63, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x12, 0x1f, 0x2e,
	0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x63, 0x6e, 0x75, 0x2f, 0x63, 0x63, 0x6e, 0x75, 0x62, 0x6f, 0x78, 0x2d,
	0x62, 0x65, 0x2f, 0x62, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_calendar_v1_calendar_proto_rawDescOnce sync.Once
	file_calendar_v1_calendar_proto_rawDescData = file_calendar_v1_calendar_proto_rawDesc
)

func file_calendar_v1_calendar_proto_rawDescGZIP() []byte {
	file_calendar_v1_calendar_proto_rawDescOnce.Do(func() {
		file_calendar_v1_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(file_calendar_v1_calendar_proto_rawDescData)
	})
	return file_calendar_v1_calendar_proto_rawDescData
}

var file_calendar_v1_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_calendar_v1_calendar_proto_goTypes = []any{
	(*CalendarRequest)(nil),      // 0: calendar.v1.CalendarRequest
	(*CalendarResponse)(nil),     // 1: calendar.v1.CalendarResponse
	(*GetCalendarRequest)(nil),   // 2: calendar.v1.GetCalendarRequest
	(*GetCalendarResponse)(nil),  // 3: calendar.v1.GetCalendarResponse
	(*SaveCalendarRequest)(nil),  // 4: calendar.v1.SaveCalendarRequest
	(*SaveCalendarResponse)(nil), // 5: calendar.v1.SaveCalendarResponse
	(*DelCalendarRequest)(nil),   // 6: calendar.v1.DelCalendarRequest
	(*DelCalendarResponse)(nil),  // 7: calendar.v1.DelCalendarResponse
}
var file_calendar_v1_calendar_proto_depIdxs = []int32{
	0, // 0: calendar.v1.SaveCalendarRequest.calendar:type_name -> calendar.v1.CalendarRequest
	2, // 1: calendar.v1.CalendarService.GetCalendar:input_type -> calendar.v1.GetCalendarRequest
	4, // 2: calendar.v1.CalendarService.SaveCalendar:input_type -> calendar.v1.SaveCalendarRequest
	6, // 3: calendar.v1.CalendarService.DelCalendar:input_type -> calendar.v1.DelCalendarRequest
	3, // 4: calendar.v1.CalendarService.GetCalendar:output_type -> calendar.v1.GetCalendarResponse
	5, // 5: calendar.v1.CalendarService.SaveCalendar:output_type -> calendar.v1.SaveCalendarResponse
	7, // 6: calendar.v1.CalendarService.DelCalendar:output_type -> calendar.v1.DelCalendarResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_calendar_v1_calendar_proto_init() }
func file_calendar_v1_calendar_proto_init() {
	if File_calendar_v1_calendar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calendar_v1_calendar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calendar_v1_calendar_proto_goTypes,
		DependencyIndexes: file_calendar_v1_calendar_proto_depIdxs,
		MessageInfos:      file_calendar_v1_calendar_proto_msgTypes,
	}.Build()
	File_calendar_v1_calendar_proto = out.File
	file_calendar_v1_calendar_proto_rawDesc = nil
	file_calendar_v1_calendar_proto_goTypes = nil
	file_calendar_v1_calendar_proto_depIdxs = nil
}
