// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.1
// source: classer/v1/classer.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	//周几的课表
	//	int64 week=1 [json_name = "week",(validate.rules).int64 = {gt: 0},(google.api.field_behavior) = REQUIRED];
	//
	// 学号
	StuId string `protobuf:"bytes,1,opt,name=stu_id,proto3" json:"stu_id,omitempty"`
	// 学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	// 学年
	Year string `protobuf:"bytes,3,opt,name=year,proto3" json:"year,omitempty"`
	// 是否直接从学校官网爬取
	Refresh bool `protobuf:"varint,4,opt,name=refresh,proto3" json:"refresh,omitempty"`
}

func (x *GetClassRequest) Reset() {
	*x = GetClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassRequest) ProtoMessage() {}

func (x *GetClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassRequest.ProtoReflect.Descriptor instead.
func (*GetClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{0}
}

func (x *GetClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *GetClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *GetClassRequest) GetRefresh() bool {
	if x != nil {
		return x.Refresh
	}
	return false
}

type GetClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 课表
	Classes []*Class `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
}

func (x *GetClassResponse) Reset() {
	*x = GetClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassResponse) ProtoMessage() {}

func (x *GetClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassResponse.ProtoReflect.Descriptor instead.
func (*GetClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{1}
}

func (x *GetClassResponse) GetClasses() []*Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

type AddClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学号
	StuId string `protobuf:"bytes,1,opt,name=stu_id,proto3" json:"stu_id,omitempty"`
	// 课程名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 第几节 '形如 "1-3","1-1"'
	DurClass string `protobuf:"bytes,3,opt,name=dur_class,proto3" json:"dur_class,omitempty"`
	// 地点
	Where string `protobuf:"bytes,4,opt,name=where,proto3" json:"where,omitempty"`
	// 教师
	Teacher string `protobuf:"bytes,5,opt,name=teacher,proto3" json:"teacher,omitempty"`
	// 哪些周
	Weeks int64 `protobuf:"varint,6,opt,name=weeks,proto3" json:"weeks,omitempty"`
	// 学期
	Semester string `protobuf:"bytes,7,opt,name=semester,proto3" json:"semester,omitempty"`
	// 学年
	Year string `protobuf:"bytes,8,opt,name=year,proto3" json:"year,omitempty"`
	// 星期几
	Day int64 `protobuf:"varint,9,opt,name=day,proto3" json:"day,omitempty"`
	// 学分
	Credit *float64 `protobuf:"fixed64,10,opt,name=credit,proto3,oneof" json:"credit,omitempty"`
}

func (x *AddClassRequest) Reset() {
	*x = AddClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassRequest) ProtoMessage() {}

func (x *AddClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassRequest.ProtoReflect.Descriptor instead.
func (*AddClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{2}
}

func (x *AddClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *AddClassRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddClassRequest) GetDurClass() string {
	if x != nil {
		return x.DurClass
	}
	return ""
}

func (x *AddClassRequest) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

func (x *AddClassRequest) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *AddClassRequest) GetWeeks() int64 {
	if x != nil {
		return x.Weeks
	}
	return 0
}

func (x *AddClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *AddClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *AddClassRequest) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *AddClassRequest) GetCredit() float64 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

type AddClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 添加的课程ID
	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AddClassResponse) Reset() {
	*x = AddClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassResponse) ProtoMessage() {}

func (x *AddClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassResponse.ProtoReflect.Descriptor instead.
func (*AddClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{3}
}

func (x *AddClassResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddClassResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 要被删的课程id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 学号
	StuId string `protobuf:"bytes,2,opt,name=stuId,json=stu_id,proto3" json:"stuId,omitempty"`
	// 学年  "2024" -> 代表"2024-2025学年"
	Year string `protobuf:"bytes,3,opt,name=year,proto3" json:"year,omitempty"`
	// 学期 "1"代表第一学期，"2"代表第二学期，"3"代表第三学期
	Semester string `protobuf:"bytes,4,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *DeleteClassRequest) Reset() {
	*x = DeleteClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClassRequest) ProtoMessage() {}

func (x *DeleteClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClassRequest.ProtoReflect.Descriptor instead.
func (*DeleteClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteClassRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *DeleteClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *DeleteClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

type DeleteClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteClassResponse) Reset() {
	*x = DeleteClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClassResponse) ProtoMessage() {}

func (x *DeleteClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClassResponse.ProtoReflect.Descriptor instead.
func (*DeleteClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteClassResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学号
	StuId string `protobuf:"bytes,1,opt,name=stu_id,proto3" json:"stu_id,omitempty"`
	// 课程名称
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// 第几节 '形如 "1-3","1-1"'
	DurClass *string `protobuf:"bytes,3,opt,name=dur_class,proto3,oneof" json:"dur_class,omitempty"`
	// 地点
	Where *string `protobuf:"bytes,4,opt,name=where,proto3,oneof" json:"where,omitempty"`
	// 教师
	Teacher *string `protobuf:"bytes,5,opt,name=teacher,proto3,oneof" json:"teacher,omitempty"`
	// 哪些周
	Weeks *int64 `protobuf:"varint,6,opt,name=weeks,proto3,oneof" json:"weeks,omitempty"`
	// 学期
	Semester string `protobuf:"bytes,7,opt,name=semester,proto3" json:"semester,omitempty"`
	// 学年
	Year string `protobuf:"bytes,8,opt,name=year,proto3" json:"year,omitempty"`
	// 星期几
	Day *int64 `protobuf:"varint,9,opt,name=day,proto3,oneof" json:"day,omitempty"`
	// 学分
	Credit *float64 `protobuf:"fixed64,10,opt,name=credit,proto3,oneof" json:"credit,omitempty"`
	// 课程的ID（唯一标识） 更新后这个可能会换，所以响应的时候会把新的ID返回
	ClassId string `protobuf:"bytes,11,opt,name=classId,json=id,proto3" json:"classId,omitempty"`
}

func (x *UpdateClassRequest) Reset() {
	*x = UpdateClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassRequest) ProtoMessage() {}

func (x *UpdateClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassRequest.ProtoReflect.Descriptor instead.
func (*UpdateClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *UpdateClassRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateClassRequest) GetDurClass() string {
	if x != nil && x.DurClass != nil {
		return *x.DurClass
	}
	return ""
}

func (x *UpdateClassRequest) GetWhere() string {
	if x != nil && x.Where != nil {
		return *x.Where
	}
	return ""
}

func (x *UpdateClassRequest) GetTeacher() string {
	if x != nil && x.Teacher != nil {
		return *x.Teacher
	}
	return ""
}

func (x *UpdateClassRequest) GetWeeks() int64 {
	if x != nil && x.Weeks != nil {
		return *x.Weeks
	}
	return 0
}

func (x *UpdateClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *UpdateClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *UpdateClassRequest) GetDay() int64 {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return 0
}

func (x *UpdateClassRequest) GetCredit() float64 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

func (x *UpdateClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type UpdateClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	// 更新后的课程的ID（唯一标识）
	ClassId string `protobuf:"bytes,2,opt,name=classId,json=id,proto3" json:"classId,omitempty"`
}

func (x *UpdateClassResponse) Reset() {
	*x = UpdateClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassResponse) ProtoMessage() {}

func (x *UpdateClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassResponse.ProtoReflect.Descriptor instead.
func (*UpdateClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateClassResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateClassResponse) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type GetAllClassInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学年  "2024" 代表"2024-2025学年"
	Year string `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	// 学期 "1"代表第一学期，"2"代表第二学期，"3"代表第三学期
	Semester string `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	// 避免一次性获取太多class[每次只获取100个]
	// 最后一个课程的时间戳，时区为UTC
	// "2023-09-03T01:01:01"
	Cursor string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *GetAllClassInfoRequest) Reset() {
	*x = GetAllClassInfoRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllClassInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllClassInfoRequest) ProtoMessage() {}

func (x *GetAllClassInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllClassInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAllClassInfoRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllClassInfoRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *GetAllClassInfoRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *GetAllClassInfoRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type GetAllClassInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassInfos []*ClassInfo `protobuf:"bytes,1,rep,name=class_infos,proto3" json:"class_infos,omitempty"`
	// 最后一个课程的时间戳，时区为UTC
	// "2023-09-03T01:01:01"
	LastTime string `protobuf:"bytes,2,opt,name=lastTime,proto3" json:"lastTime,omitempty"`
}

func (x *GetAllClassInfoResponse) Reset() {
	*x = GetAllClassInfoResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllClassInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllClassInfoResponse) ProtoMessage() {}

func (x *GetAllClassInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllClassInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAllClassInfoResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllClassInfoResponse) GetClassInfos() []*ClassInfo {
	if x != nil {
		return x.ClassInfos
	}
	return nil
}

func (x *GetAllClassInfoResponse) GetLastTime() string {
	if x != nil {
		return x.LastTime
	}
	return ""
}

type GetRecycleBinClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学号
	StuId string `protobuf:"bytes,1,opt,name=stuId,json=stu_id,proto3" json:"stuId,omitempty"`
	// 学年  "2024" 代表"2024-2025学年"
	Year string `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	// 学期 "1"代表第一学期，"2"代表第二学期，"3"代表第三学期
	Semester string `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetRecycleBinClassRequest) Reset() {
	*x = GetRecycleBinClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecycleBinClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecycleBinClassRequest) ProtoMessage() {}

func (x *GetRecycleBinClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecycleBinClassRequest.ProtoReflect.Descriptor instead.
func (*GetRecycleBinClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecycleBinClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *GetRecycleBinClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *GetRecycleBinClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

type GetRecycleBinClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 回收站的课程
	ClassInfos []*ClassInfo `protobuf:"bytes,1,rep,name=class_infos,proto3" json:"class_infos,omitempty"`
}

func (x *GetRecycleBinClassResponse) Reset() {
	*x = GetRecycleBinClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecycleBinClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecycleBinClassResponse) ProtoMessage() {}

func (x *GetRecycleBinClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecycleBinClassResponse.ProtoReflect.Descriptor instead.
func (*GetRecycleBinClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{11}
}

func (x *GetRecycleBinClassResponse) GetClassInfos() []*ClassInfo {
	if x != nil {
		return x.ClassInfos
	}
	return nil
}

type RecoverClassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 学号
	StuId string `protobuf:"bytes,1,opt,name=stuId,json=stu_id,proto3" json:"stuId,omitempty"`
	// 学年  "2024" 代表"2024-2025学年"
	Year string `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	// 学期 "1"代表第一学期，"2"代表第二学期，"3"代表第三学期
	Semester string `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	// 课程的ID（唯一标识） 更新后这个可能会换，所以响应的时候会把新的ID返回
	ClassId string `protobuf:"bytes,11,opt,name=classId,json=id,proto3" json:"classId,omitempty"`
}

func (x *RecoverClassRequest) Reset() {
	*x = RecoverClassRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverClassRequest) ProtoMessage() {}

func (x *RecoverClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverClassRequest.ProtoReflect.Descriptor instead.
func (*RecoverClassRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{12}
}

func (x *RecoverClassRequest) GetStuId() string {
	if x != nil {
		return x.StuId
	}
	return ""
}

func (x *RecoverClassRequest) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *RecoverClassRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *RecoverClassRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

type RecoverClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RecoverClassResponse) Reset() {
	*x = RecoverClassResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverClassResponse) ProtoMessage() {}

func (x *RecoverClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverClassResponse.ProtoReflect.Descriptor instead.
func (*RecoverClassResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{13}
}

func (x *RecoverClassResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetStuIdByJxbIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JxbId string `protobuf:"bytes,1,opt,name=jxb_id,json=jxbId,proto3" json:"jxb_id,omitempty"`
}

func (x *GetStuIdByJxbIdRequest) Reset() {
	*x = GetStuIdByJxbIdRequest{}
	mi := &file_classer_v1_classer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStuIdByJxbIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStuIdByJxbIdRequest) ProtoMessage() {}

func (x *GetStuIdByJxbIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStuIdByJxbIdRequest.ProtoReflect.Descriptor instead.
func (*GetStuIdByJxbIdRequest) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{14}
}

func (x *GetStuIdByJxbIdRequest) GetJxbId() string {
	if x != nil {
		return x.JxbId
	}
	return ""
}

type GetStuIdByJxbIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StuId []string `protobuf:"bytes,1,rep,name=stu_id,json=stuId,proto3" json:"stu_id,omitempty"`
}

func (x *GetStuIdByJxbIdResponse) Reset() {
	*x = GetStuIdByJxbIdResponse{}
	mi := &file_classer_v1_classer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStuIdByJxbIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStuIdByJxbIdResponse) ProtoMessage() {}

func (x *GetStuIdByJxbIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStuIdByJxbIdResponse.ProtoReflect.Descriptor instead.
func (*GetStuIdByJxbIdResponse) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{15}
}

func (x *GetStuIdByJxbIdResponse) GetStuId() []string {
	if x != nil {
		return x.StuId
	}
	return nil
}

type ClassInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 星期几
	Day int64 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	// 任课教师
	Teacher string `protobuf:"bytes,2,opt,name=teacher,proto3" json:"teacher,omitempty"`
	// 上课地点
	Where string `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	// 上课是第几节（如1-2,3,4）
	ClassWhen string `protobuf:"bytes,4,opt,name=class_when,proto3" json:"class_when,omitempty"`
	// 上课的周数(文字描述,如1-9周)
	WeekDuration string `protobuf:"bytes,5,opt,name=week_duration,proto3" json:"week_duration,omitempty"`
	// 课程名称
	Classname string `protobuf:"bytes,6,opt,name=classname,proto3" json:"classname,omitempty"`
	// 学分
	Credit float64 `protobuf:"fixed64,7,opt,name=credit,proto3" json:"credit,omitempty"`
	// 哪些周 这个是一个64位的数字,如果有第一周,那么该数的二进制从右往左的第一位为1,以此类推
	// 比如该数的二进制是000000101,就代表第一周和第三周有课.
	Weeks int64 `protobuf:"varint,9,opt,name=weeks,proto3" json:"weeks,omitempty"`
	// 学期 "1"代表第一学期，"2"代表第二学期，"3"代表第三学期
	Semester string `protobuf:"bytes,10,opt,name=semester,proto3" json:"semester,omitempty"`
	// 学年  "2024" 代表"2024-2025学年"
	Year string `protobuf:"bytes,11,opt,name=year,proto3" json:"year,omitempty"`
	// 课程唯一标识id
	Id string `protobuf:"bytes,12,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClassInfo) Reset() {
	*x = ClassInfo{}
	mi := &file_classer_v1_classer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassInfo) ProtoMessage() {}

func (x *ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassInfo.ProtoReflect.Descriptor instead.
func (*ClassInfo) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{16}
}

func (x *ClassInfo) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *ClassInfo) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *ClassInfo) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

func (x *ClassInfo) GetClassWhen() string {
	if x != nil {
		return x.ClassWhen
	}
	return ""
}

func (x *ClassInfo) GetWeekDuration() string {
	if x != nil {
		return x.WeekDuration
	}
	return ""
}

func (x *ClassInfo) GetClassname() string {
	if x != nil {
		return x.Classname
	}
	return ""
}

func (x *ClassInfo) GetCredit() float64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *ClassInfo) GetWeeks() int64 {
	if x != nil {
		return x.Weeks
	}
	return 0
}

func (x *ClassInfo) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

func (x *ClassInfo) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *ClassInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 课程信息
	Info *ClassInfo `protobuf:"bytes,1,opt,name=info,json=class_info,proto3" json:"info,omitempty"`
}

func (x *Class) Reset() {
	*x = Class{}
	mi := &file_classer_v1_classer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Class) ProtoMessage() {}

func (x *Class) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Class.ProtoReflect.Descriptor instead.
func (*Class) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{17}
}

func (x *Class) GetInfo() *ClassInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetSchoolDayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSchoolDayReq) Reset() {
	*x = GetSchoolDayReq{}
	mi := &file_classer_v1_classer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchoolDayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchoolDayReq) ProtoMessage() {}

func (x *GetSchoolDayReq) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchoolDayReq.ProtoReflect.Descriptor instead.
func (*GetSchoolDayReq) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{18}
}

type GetSchoolDayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HolidayTime string `protobuf:"bytes,1,opt,name=holidayTime,proto3" json:"holidayTime,omitempty"` //形式:"2025-07-05"
	SchoolTime  string `protobuf:"bytes,2,opt,name=schoolTime,proto3" json:"schoolTime,omitempty"`   //形式:"2025-02-17"
}

func (x *GetSchoolDayResp) Reset() {
	*x = GetSchoolDayResp{}
	mi := &file_classer_v1_classer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchoolDayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchoolDayResp) ProtoMessage() {}

func (x *GetSchoolDayResp) ProtoReflect() protoreflect.Message {
	mi := &file_classer_v1_classer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchoolDayResp.ProtoReflect.Descriptor instead.
func (*GetSchoolDayResp) Descriptor() ([]byte, []int) {
	return file_classer_v1_classer_proto_rawDescGZIP(), []int{19}
}

func (x *GetSchoolDayResp) GetHolidayTime() string {
	if x != nil {
		return x.HolidayTime
	}
	return ""
}

func (x *GetSchoolDayResp) GetSchoolTime() string {
	if x != nil {
		return x.SchoolTime
	}
	return ""
}

var File_classer_v1_classer_proto protoreflect.FileDescriptor

var file_classer_v1_classer_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18,
	0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01,
	0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22,
	0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x22, 0x86, 0x03, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x0a, 0x18, 0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x09,
	0x64, 0x75, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x64, 0x75,
	0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01,
	0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x05, 0x77,
	0x65, 0x65, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2,
	0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x1f, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xe2,
	0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x18, 0x07, 0x28, 0x01, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xa3, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18,
	0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xf0,
	0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x0a, 0x18, 0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x09, 0x64, 0x75, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x01, 0x52, 0x09, 0x64, 0x75,
	0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x77, 0x68,
	0x65, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x48, 0x02, 0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x03, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x48, 0x04,
	0x52, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x18, 0x07, 0x28, 0x01, 0x48, 0x05,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x75, 0x72, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x77, 0x68, 0x65, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x64, 0x61, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x22, 0x3c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x13, 0x0a, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x74, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18,
	0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xa9, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a,
	0x18, 0x0a, 0x52, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2,
	0x41, 0x01, 0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x49, 0x64, 0x42, 0x79,
	0x4a, 0x78, 0x62, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x78, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x78,
	0x62, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x49, 0x64, 0x42,
	0x79, 0x4a, 0x78, 0x62, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x75, 0x49, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x77,
	0x68, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x77, 0x68, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65,
	0x65, 0x6b, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xf8, 0x07, 0x0a, 0x07, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x12, 0x74, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x7b, 0x73, 0x74, 0x75, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x79, 0x65, 0x61, 0x72,
	0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x12, 0x5c, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a,
	0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2e, 0x2a, 0x2c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x2f, 0x7b, 0x73, 0x74, 0x75, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x79, 0x65, 0x61, 0x72,
	0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x68, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x1a, 0x0d, 0x2f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28,
	0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2f, 0x7b,
	0x73, 0x74, 0x75, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x79, 0x65, 0x61, 0x72, 0x7d, 0x2f, 0x7b, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x12, 0x6c, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x2f, 0x64, 0x61, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x49, 0x64, 0x42, 0x79, 0x4a, 0x78, 0x62, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x49, 0x64,
	0x42, 0x79, 0x4a, 0x78, 0x62, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x49, 0x64, 0x42, 0x79, 0x4a, 0x78, 0x62, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_classer_v1_classer_proto_rawDescOnce sync.Once
	file_classer_v1_classer_proto_rawDescData = file_classer_v1_classer_proto_rawDesc
)

func file_classer_v1_classer_proto_rawDescGZIP() []byte {
	file_classer_v1_classer_proto_rawDescOnce.Do(func() {
		file_classer_v1_classer_proto_rawDescData = protoimpl.X.CompressGZIP(file_classer_v1_classer_proto_rawDescData)
	})
	return file_classer_v1_classer_proto_rawDescData
}

var file_classer_v1_classer_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_classer_v1_classer_proto_goTypes = []any{
	(*GetClassRequest)(nil),            // 0: classer.v1.GetClassRequest
	(*GetClassResponse)(nil),           // 1: classer.v1.GetClassResponse
	(*AddClassRequest)(nil),            // 2: classer.v1.AddClassRequest
	(*AddClassResponse)(nil),           // 3: classer.v1.AddClassResponse
	(*DeleteClassRequest)(nil),         // 4: classer.v1.DeleteClassRequest
	(*DeleteClassResponse)(nil),        // 5: classer.v1.DeleteClassResponse
	(*UpdateClassRequest)(nil),         // 6: classer.v1.UpdateClassRequest
	(*UpdateClassResponse)(nil),        // 7: classer.v1.UpdateClassResponse
	(*GetAllClassInfoRequest)(nil),     // 8: classer.v1.GetAllClassInfoRequest
	(*GetAllClassInfoResponse)(nil),    // 9: classer.v1.GetAllClassInfoResponse
	(*GetRecycleBinClassRequest)(nil),  // 10: classer.v1.GetRecycleBinClassRequest
	(*GetRecycleBinClassResponse)(nil), // 11: classer.v1.GetRecycleBinClassResponse
	(*RecoverClassRequest)(nil),        // 12: classer.v1.RecoverClassRequest
	(*RecoverClassResponse)(nil),       // 13: classer.v1.RecoverClassResponse
	(*GetStuIdByJxbIdRequest)(nil),     // 14: classer.v1.GetStuIdByJxbIdRequest
	(*GetStuIdByJxbIdResponse)(nil),    // 15: classer.v1.GetStuIdByJxbIdResponse
	(*ClassInfo)(nil),                  // 16: classer.v1.ClassInfo
	(*Class)(nil),                      // 17: classer.v1.Class
	(*GetSchoolDayReq)(nil),            // 18: classer.v1.GetSchoolDayReq
	(*GetSchoolDayResp)(nil),           // 19: classer.v1.GetSchoolDayResp
}
var file_classer_v1_classer_proto_depIdxs = []int32{
	17, // 0: classer.v1.GetClassResponse.classes:type_name -> classer.v1.Class
	16, // 1: classer.v1.GetAllClassInfoResponse.class_infos:type_name -> classer.v1.ClassInfo
	16, // 2: classer.v1.GetRecycleBinClassResponse.class_infos:type_name -> classer.v1.ClassInfo
	16, // 3: classer.v1.Class.info:type_name -> classer.v1.ClassInfo
	0,  // 4: classer.v1.Classer.GetClass:input_type -> classer.v1.GetClassRequest
	2,  // 5: classer.v1.Classer.AddClass:input_type -> classer.v1.AddClassRequest
	4,  // 6: classer.v1.Classer.DeleteClass:input_type -> classer.v1.DeleteClassRequest
	6,  // 7: classer.v1.Classer.UpdateClass:input_type -> classer.v1.UpdateClassRequest
	10, // 8: classer.v1.Classer.GetRecycleBinClassInfos:input_type -> classer.v1.GetRecycleBinClassRequest
	12, // 9: classer.v1.Classer.RecoverClass:input_type -> classer.v1.RecoverClassRequest
	18, // 10: classer.v1.Classer.GetSchoolDay:input_type -> classer.v1.GetSchoolDayReq
	8,  // 11: classer.v1.Classer.GetAllClassInfo:input_type -> classer.v1.GetAllClassInfoRequest
	14, // 12: classer.v1.Classer.GetStuIdByJxbId:input_type -> classer.v1.GetStuIdByJxbIdRequest
	1,  // 13: classer.v1.Classer.GetClass:output_type -> classer.v1.GetClassResponse
	3,  // 14: classer.v1.Classer.AddClass:output_type -> classer.v1.AddClassResponse
	5,  // 15: classer.v1.Classer.DeleteClass:output_type -> classer.v1.DeleteClassResponse
	7,  // 16: classer.v1.Classer.UpdateClass:output_type -> classer.v1.UpdateClassResponse
	11, // 17: classer.v1.Classer.GetRecycleBinClassInfos:output_type -> classer.v1.GetRecycleBinClassResponse
	13, // 18: classer.v1.Classer.RecoverClass:output_type -> classer.v1.RecoverClassResponse
	19, // 19: classer.v1.Classer.GetSchoolDay:output_type -> classer.v1.GetSchoolDayResp
	9,  // 20: classer.v1.Classer.GetAllClassInfo:output_type -> classer.v1.GetAllClassInfoResponse
	15, // 21: classer.v1.Classer.GetStuIdByJxbId:output_type -> classer.v1.GetStuIdByJxbIdResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_classer_v1_classer_proto_init() }
func file_classer_v1_classer_proto_init() {
	if File_classer_v1_classer_proto != nil {
		return
	}
	file_classer_v1_classer_proto_msgTypes[2].OneofWrappers = []any{}
	file_classer_v1_classer_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_classer_v1_classer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_classer_v1_classer_proto_goTypes,
		DependencyIndexes: file_classer_v1_classer_proto_depIdxs,
		MessageInfos:      file_classer_v1_classer_proto_msgTypes,
	}.Build()
	File_classer_v1_classer_proto = out.File
	file_classer_v1_classer_proto_rawDesc = nil
	file_classer_v1_classer_proto_goTypes = nil
	file_classer_v1_classer_proto_depIdxs = nil
}
